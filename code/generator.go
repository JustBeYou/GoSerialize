package code

import (
	"fmt"
	"strings"
)

type StructField struct {
	name string
	typeName string
}

func GenPackageHeaderAndImports(name string) string {
	return fmt.Sprintf(`
		package %s
		import (
			"serialize/encoders"
		)
	
		// THIS FILE WAS GENERATED BY serialize
		// PLEASE DO NOT EDIT
	`, name)
}

func GenSerializationHeader(name string) string {
	return fmt.Sprintf(`
		func (self %s) Serialize() ([]byte, error) {
			var output, bytesTemp []byte
	`, name)
}

func GenSerializationFooter() string {
	return "return output, nil }"
}

func GenFieldSerialization(fieldInfo StructField) string {
	return fmt.Sprintf(`
		bytesTemp = encoders.%sAsBytes(self.%s)
		output = append(output, bytesTemp...)
	`, strings.Title(fieldInfo.typeName), fieldInfo.name)
}

func GenUnserializationHeader(name string) string {
	return fmt.Sprintf("")
}

func GenFieldUnserialization(fieldInfo StructField) string {
	return fmt.Sprintf("")
}