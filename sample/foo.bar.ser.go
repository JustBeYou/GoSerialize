package sample

import (
	"errors"
	"fmt"
	"serialize/decoders"
	"serialize/encoders"
)

// THIS FILE WAS GENERATED BY serialize
// PLEASE DO NOT EDIT

func (self Bar) HashingSerialize() ([]byte, error) {
	var output, bytesTemp []byte

	bytesTemp = encoders.IntAsBytes(self.Value)
	output = append(output, bytesTemp...)
	return output, nil
}
func (self Bar) HashingUnserialize(data []byte) (interface{}, uint64, error) {
	var output Bar
	var index uint64 = 0
	var consumed uint64 = 0
	var err error

	output.Value, consumed, err = decoders.IntFromBytes(data[index:])
	if err != nil {
		return output, index, errors.New(fmt.Sprintf("Could not decode at %d: %s\n", index, err.Error()))
	}
	index += consumed
	return output, index, nil
}
func (self Bar) Serialize() ([]byte, error) {
	var output, bytesTemp []byte

	bytesTemp = encoders.IntAsBytes(self.Value)
	output = append(output, bytesTemp...)
	return output, nil
}
func (self Bar) Unserialize(data []byte) (interface{}, uint64, error) {
	var output Bar
	var index uint64 = 0
	var consumed uint64 = 0
	var err error

	output.Value, consumed, err = decoders.IntFromBytes(data[index:])
	if err != nil {
		return output, index, errors.New(fmt.Sprintf("Could not decode at %d: %s\n", index, err.Error()))
	}
	index += consumed
	return output, index, nil
}
